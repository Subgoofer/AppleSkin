plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'net.neoforged.gradle.userdev' version '7.0.142'
}

repositories {
	maven {
		name 'Maven for PR #1076' // https://github.com/neoforged/NeoForge/pull/1076
		url 'https://prmaven.neoforged.net/NeoForge/pr1076'
		content {
			includeModule('net.neoforged', 'neoforge')
			includeModule('net.neoforged', 'testframework')
		}
	}
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

// default run configurations.
// these can be tweaked, removed, or duplicated as needed.
runs {
	// applies to all the run configs below
	configureEach {
		systemProperty 'forge.logging.markers', 'REGISTRIES'
		systemProperty 'forge.logging.console.level', 'debug'
		modSource project.sourceSets.main
	}

	client {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
	}

	server {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
		programArgument '--nogui'
	}

	gameTestServer {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
	}
}

group = project.maven_group
archivesBaseName = project.archives_base_name
version = "mc" + project.minecraft_version + "-" + project.mod_version
def semver_version = project.mod_version + "+mc" + project.minecraft_version

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.java.srcDirs += 'apis'
sourceSets.main.resources.srcDirs += 'resources'

dependencies {
	implementation "net.neoforged:neoforge:${neo_version}"
}

jar {
	manifest {
		attributes([
			"Specification-Title": "appleskin",
			"Specification-Vendor": "squeek",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": semver_version,
			"Implementation-Vendor" :"squeek",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

task sourcesJar(type: Jar) {
	archiveClassifier.set("sources")
	from sourceSets.main.allJava
}

task apiJar(type: Jar) {
	archiveClassifier.set("api")
	from sourceSets.main.output
	include "squeek/appleskin/api/**"
}

artifacts {
	archives sourcesJar
	archives apiJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = archivesBaseName

			// add all the jars that should be included when publishing to maven
			artifact(jar)
			artifact(sourcesJar)
			artifact(apiJar)
		}
	}

	repositories {
		maven {
			url = project.findProperty("maven.url") ?: System.getenv("MAVEN_URL")
			credentials {
				username=project.findProperty("maven.user") ?: System.getenv("MAVEN_USER")
				password=project.findProperty("maven.password") ?: System.getenv("MAVEN_PASSWORD")
			}
		}
	}
}
